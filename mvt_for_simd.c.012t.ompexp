
;; Function init_array (init_array, funcdef_no=2, decl_uid=4726, cgraph_uid=2, symbol_order=3)

init_array (int n, double * x1, double * x2, double * y_1, double * y_2, double[8000] * A)
{
  int j;
  int i;
  double D.4806;
  double D.4805;
  double D.4804;
  double D.4803;
  double[8000] * D.4802;
  long unsigned int D.4801;
  long unsigned int D.4800;
  double D.4799;
  double D.4798;
  double D.4797;
  double D.4796;
  double * D.4795;
  long unsigned int D.4794;
  long unsigned int D.4793;
  double D.4792;
  double D.4791;
  double D.4790;
  double D.4789;
  double * D.4788;
  long unsigned int D.4787;
  long unsigned int D.4786;
  double D.4785;
  double D.4784;
  double D.4783;
  double D.4782;
  double * D.4781;
  long unsigned int D.4780;
  long unsigned int D.4779;
  double D.4778;
  double D.4777;
  double D.4776;
  double * D.4775;
  long unsigned int D.4774;
  long unsigned int D.4773;

  <bb 2>:
  i = 0;
  goto <bb 7>;

  <bb 3>:
  D.4773 = (long unsigned int) i;
  D.4774 = D.4773 * 8;
  D.4775 = x1 + D.4774;
  D.4776 = (double) i;
  D.4777 = (double) n;
  D.4778 = D.4776 / D.4777;
  *D.4775 = D.4778;
  D.4779 = (long unsigned int) i;
  D.4780 = D.4779 * 8;
  D.4781 = x2 + D.4780;
  D.4782 = (double) i;
  D.4783 = D.4782 + 1.0e+0;
  D.4784 = (double) n;
  D.4785 = D.4783 / D.4784;
  *D.4781 = D.4785;
  D.4786 = (long unsigned int) i;
  D.4787 = D.4786 * 8;
  D.4788 = y_1 + D.4787;
  D.4789 = (double) i;
  D.4790 = D.4789 + 3.0e+0;
  D.4791 = (double) n;
  D.4792 = D.4790 / D.4791;
  *D.4788 = D.4792;
  D.4793 = (long unsigned int) i;
  D.4794 = D.4793 * 8;
  D.4795 = y_2 + D.4794;
  D.4796 = (double) i;
  D.4797 = D.4796 + 4.0e+0;
  D.4798 = (double) n;
  D.4799 = D.4797 / D.4798;
  *D.4795 = D.4799;
  j = 0;
  goto <bb 5>;

  <bb 4>:
  D.4800 = (long unsigned int) i;
  D.4801 = D.4800 * 64000;
  D.4802 = A + D.4801;
  D.4803 = (double) i;
  D.4804 = (double) j;
  D.4805 = D.4803 * D.4804;
  D.4806 = D.4805 / 8.0e+3;
  *D.4802[j] = D.4806;
  j = j + 1;

  <bb 5>:
  if (j < n)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 6>:
  i = i + 1;

  <bb 7>:
  if (i < n)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  return;

}



;; Function print_array (print_array, funcdef_no=3, decl_uid=4739, cgraph_uid=3, symbol_order=4)

print_array (int n, double * x1, double * x2)
{
  int i;
  struct _IO_FILE * stderr.2;
  int D.4817;
  struct _IO_FILE * stderr.1;
  double D.4815;
  double * D.4814;
  long unsigned int D.4813;
  long unsigned int D.4812;
  struct _IO_FILE * stderr.0;
  double D.4810;
  double * D.4809;
  long unsigned int D.4808;
  long unsigned int D.4807;

  <bb 2>:
  i = 0;
  goto <bb 6>;

  <bb 3>:
  D.4807 = (long unsigned int) i;
  D.4808 = D.4807 * 8;
  D.4809 = x1 + D.4808;
  D.4810 = *D.4809;
  stderr.0 = stderr;
  fprintf (stderr.0, "%0.2lf ", D.4810);
  D.4812 = (long unsigned int) i;
  D.4813 = D.4812 * 8;
  D.4814 = x2 + D.4813;
  D.4815 = *D.4814;
  stderr.1 = stderr;
  fprintf (stderr.1, "%0.2lf ", D.4815);
  D.4817 = i % 20;
  if (D.4817 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  stderr.2 = stderr;
  __builtin_fputc (10, stderr.2);

  <bb 5>:
  i = i + 1;

  <bb 6>:
  if (i < n)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 7>:
  return;

}



;; Function kernel_mvt (kernel_mvt, funcdef_no=4, decl_uid=4751, cgraph_uid=4, symbol_order=5)


OMP region tree

bb 2: gimple_omp_parallel
    bb 16: gimple_omp_for
        bb 17: gimple_omp_for
        bb 21: GIMPLE_OMP_CONTINUE
        bb 24: GIMPLE_OMP_RETURN
    bb 25: GIMPLE_OMP_CONTINUE
    bb 28: GIMPLE_OMP_RETURN
    bb 3: gimple_omp_for
        bb 4: gimple_omp_for
        bb 8: GIMPLE_OMP_CONTINUE
        bb 11: GIMPLE_OMP_RETURN
    bb 12: GIMPLE_OMP_CONTINUE
    bb 15: GIMPLE_OMP_RETURN
bb 29: GIMPLE_OMP_RETURN

Introduced new external node (__builtin_GOMP_loop_guided_start/11).
Introduced new external node (__builtin_GOMP_loop_guided_next/12).
Introduced new external node (__builtin_GOMP_loop_end/13).
Introduced new external node (__builtin_GOMP_loop_end_nowait/14).
Merging blocks 2 and 38
Merging blocks 2 and 30
kernel_mvt (int n, double * x1, double * x2, double * y_1, double * y_2, double[8000] * A)
{
  unsigned int threads.16;
  _Bool D.4931;
  long int .iend0.15;
  int D.4930;
  long int .istart0.14;
  long int D.4926;
  _Bool D.4927;
  long int .iend0.13;
  long int .istart0.12;
  _Bool D.4923;
  long int .iend0.11;
  int D.4922;
  long int .istart0.10;
  long int D.4918;
  _Bool D.4919;
  long int .iend0.9;
  long int .istart0.8;
  int i;
  int D.4909;
  int D.4903;
  int D.4902;
  int i.5;
  int i;
  int D.4912;
  int i;
  int D.4896;
  int D.4890;
  int D.4889;
  int i.4;
  int i;
  int D.4899;
  int j;
  int i;
  int threads.3;
  struct .omp_data_s.6 .omp_data_o.7;
  int D.4908;
  double * D.4907;
  double[8000] * D.4906;
  double * D.4905;
  double * D.4904;
  int D.4895;
  double * D.4894;
  double[8000] * D.4893;
  double * D.4892;
  double * D.4891;

  <bb 2>:
  threads.3 = threads;
  .omp_data_o.7.x1 = x1;
  .omp_data_o.7.x2 = x2;
  .omp_data_o.7.y_1 = y_1;
  .omp_data_o.7.y_2 = y_2;
  .omp_data_o.7.A = A;
  .omp_data_o.7.n = n;
  .omp_data_o.7.i = i;
  threads.16 = (unsigned int) threads.3;
  __builtin_GOMP_parallel (kernel_mvt._omp_fn.0, &.omp_data_o.7, threads.16, 0);
  x1 = .omp_data_o.7.x1;
  x2 = .omp_data_o.7.x2;
  y_1 = .omp_data_o.7.y_1;
  y_2 = .omp_data_o.7.y_2;
  A = .omp_data_o.7.A;
  n = .omp_data_o.7.n;
  i = .omp_data_o.7.i;
  .omp_data_o.7 = {CLOBBER};
  return;

}



;; Function main (main, funcdef_no=5, decl_uid=4763, cgraph_uid=5, symbol_order=6)

main (int argc, char * * argv)
{
  int valor;
  double[8000] * y_2;
  double[8000] * y_1;
  double[8000] * x2;
  double[8000] * x1;
  double[8000][8000] * A;
  int n;
  int D.5029;
  unsigned char D.5026;
  char * D.5025;
  char * D.5020;
  char * * D.5019;

  <bb 2>:
  if (argc > 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  D.5019 = argv + 8;
  D.5020 = *D.5019;
  valor = atoi (D.5020);
  if (valor > 1)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  threads = valor;

  <bb 5>:
  n = 8000;
  A = polybench_alloc_data (64000000, 8);
  x1 = polybench_alloc_data (8000, 8);
  x2 = polybench_alloc_data (8000, 8);
  y_1 = polybench_alloc_data (8000, 8);
  y_2 = polybench_alloc_data (8000, 8);
  init_array (n, x1, x2, y_1, y_2, A);
  polybench_timer_start ();
  kernel_mvt (n, x1, x2, y_1, y_2, A);
  polybench_timer_stop ();
  polybench_timer_print ();
  if (argc > 42)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  D.5025 = *argv;
  D.5026 = MEM[(const unsigned char * {ref-all})D.5025];
  if (D.5026 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  print_array (n, x1, x2);

  <bb 8>:
  free (A);
  free (x1);
  free (x2);
  free (y_1);
  free (y_2);
  D.5029 = 0;

<L8>:
  return D.5029;

}


